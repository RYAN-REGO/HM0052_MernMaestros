'use client';
'use strict';

var React = require('react');
var localStorageManager = require('./color-scheme-managers/local-storage-manager.cjs');
var Mantine_context = require('./Mantine.context.cjs');
var MantineClasses = require('./MantineClasses/MantineClasses.cjs');
var MantineCssVariables = require('./MantineCssVariables/MantineCssVariables.cjs');
require('@mantine/hooks');
var MantineThemeProvider = require('./MantineThemeProvider/MantineThemeProvider.cjs');
var suppressNextjsWarning = require('./suppress-nextjs-warning.cjs');
var useProviderColorScheme = require('./use-mantine-color-scheme/use-provider-color-scheme.cjs');
var useRespectReduceMotion = require('./use-respect-reduce-motion/use-respect-reduce-motion.cjs');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefault(React);

suppressNextjsWarning.suppressNextjsWarning();
function MantineProvider({
  theme,
  children,
  getStyleNonce,
  withCssVariables = true,
  cssVariablesSelector = ":root",
  classNamesPrefix = "mantine",
  colorSchemeManager = localStorageManager.localStorageColorSchemeManager(),
  defaultColorScheme = "light",
  getRootElement = () => document.documentElement,
  cssVariablesResolver,
  forceColorScheme
}) {
  const { colorScheme, setColorScheme, clearColorScheme } = useProviderColorScheme.useProviderColorScheme({
    defaultColorScheme,
    forceColorScheme,
    manager: colorSchemeManager,
    getRootElement
  });
  useRespectReduceMotion.useRespectReduceMotion({
    respectReducedMotion: theme?.respectReducedMotion || false,
    getRootElement
  });
  return /* @__PURE__ */ React__default.default.createElement(
    Mantine_context.MantineContext.Provider,
    {
      value: {
        colorSchemeManager,
        colorScheme,
        setColorScheme,
        clearColorScheme,
        getRootElement,
        classNamesPrefix,
        getStyleNonce,
        cssVariablesResolver,
        cssVariablesSelector
      }
    },
    /* @__PURE__ */ React__default.default.createElement(MantineThemeProvider.MantineThemeProvider, { theme }, withCssVariables && /* @__PURE__ */ React__default.default.createElement(MantineCssVariables.MantineCssVariables, { cssVariablesSelector }), /* @__PURE__ */ React__default.default.createElement(MantineClasses.MantineClasses, null), children)
  );
}
MantineProvider.displayName = "@mantine/core/MantineProvider";

exports.MantineProvider = MantineProvider;
//# sourceMappingURL=MantineProvider.cjs.map
